"use strict";(self.webpackChunkdoc_dvpt_inte=self.webpackChunkdoc_dvpt_inte||[]).push([[53],{4027:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var s=i(4848),o=i(8453);const t={sidebar_position:3,sidebar_label:"Clean Code"},r="Concepts de Clean Code",c={id:"notions-globales/clean-code",title:"Concepts de Clean Code",description:"Liste non exhaustive de concepts de clean code que vous pourrez impl\xe9menter dans vos exercices.",source:"@site/docs/notions-globales/clean-code.md",sourceDirName:"notions-globales",slug:"/notions-globales/clean-code",permalink:"/doc-dvpt-et-integration/docs/notions-globales/clean-code",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Clean Code"},sidebar:"tutorialSidebar",previous:{title:"Manipulation de tableaux",permalink:"/doc-dvpt-et-integration/docs/notions-globales/misc/manipulation-tableaux"},next:{title:"TD",permalink:"/doc-dvpt-et-integration/docs/category/td"}},l={},a=[{value:"Concept DRY : Don&#39;t Repeat Yourself",id:"concept-dry--dont-repeat-yourself",level:2},{value:"Principe de S\xe9paration des pr\xe9occupations : Single Responsibility Principle",id:"principe-de-s\xe9paration-des-pr\xe9occupations--single-responsibility-principle",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"concepts-de-clean-code",children:"Concepts de Clean Code"})}),"\n",(0,s.jsx)(n.p,{children:"Liste non exhaustive de concepts de clean code que vous pourrez impl\xe9menter dans vos exercices."}),"\n",(0,s.jsxs)(n.admonition,{title:"Objectif",type:"tip",children:[(0,s.jsxs)(n.p,{children:["Faire du ",(0,s.jsx)(n.strong,{children:"Clean Code"}),", c'est \xe9crire un code qui est clair, compr\xe9hensible, et maintenable."]}),(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Make it work, make it right, make it fast."}),"\n"]}),(0,s.jsx)(n.p,{children:"Avant toute chose, il est important de rappeler qu'il est pr\xe9f\xe9rable d'avoir un code qui marche, que d'avoir un code propre mais qui ne marche pas. L'important est de tout d'abord faire un code qui marche, et dans un second temps d'analyser le code \xe9crit pour le rendre plus propre : refactoriser le code dupliqu\xe9, le d\xe9couper en fonctions plus petites, donner des noms plus clairs aux variables et fonctions..."})]}),"\n",(0,s.jsx)(n.h2,{id:"concept-dry--dont-repeat-yourself",children:"Concept DRY : Don't Repeat Yourself"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Ne vous r\xe9p\xe9tez pas."})})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Ce principe permet d'",(0,s.jsx)(n.strong,{children:"\xe9viter la redondance"})," de code. Un code qui contient des morceaux dupliqu\xe9s, c'est un code qui sera plus difficile \xe0 maintenir d\xe8s qu'il y aura une modification \xe0 faire."]}),"\n",(0,s.jsx)(n.p,{children:"Pour \xe9crire un code DRY, il existe plusieurs bonnes pratiques \xe0 suivre :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Si une m\xeame valeur est utilis\xe9e \xe0 plusieurs endroits, ajouter une variable globale."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const CalculeAire = (largeur,hauteur) => {\n    return largeur * hauteur;\n};\n\n// \u2717 Ne pas \xe9crire\nconst AireCarre = CalculeAire(4,4);\n\n// \u2713 Mais \xe9crire plut\xf4t\nconst TAILLE = 4;\nconst AireCarre = CalculeAire(TAILLE,TAILLE);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Si un bout de code est r\xe9utilis\xe9 \xe0 un autre endroit, il faut alors en faire une fonction."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"principe-de-s\xe9paration-des-pr\xe9occupations--single-responsibility-principle",children:"Principe de S\xe9paration des pr\xe9occupations : Single Responsibility Principle"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Une fonction ne doit avoir qu'une seule action."})})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\xc9crire des fonctions courtes."}),"\n",(0,s.jsx)(n.p,{children:"Si vous \xe9crivez une fonction qui devient de plus en plus grande, s\xe9parez-la en plus petites fonctions que l'on appelle fonctions interm\xe9diaires."}),"\n",(0,s.jsxs)(n.p,{children:["Plus largement dans un projet, d\xe9coupez vos fichiers en fonctions de leurs t\xe2ches. Un fichier ne devrait avoir qu'une responsabilit\xe9 globale. Si par exemple vous commencez \xe0 accumuler plein de petites fonctions utiles (conversion, calculs math\xe9matiques simples...), il peut \xeatre int\xe9ressant de toutes les rassembler dans un nouveau fichier ",(0,s.jsx)(n.code,{children:"utils.js"}),", et d'appeler ces fonctions dans vos autres fichiers (en utilisant des ",(0,s.jsx)(n.a,{href:"https://www.w3schools.com/js/js_modules.asp",children:"modules"}),")."]}),"\n",(0,s.jsx)(n.p,{children:"En plus du d'\xe9viter la redondance (principe DRY), d\xe9couper son code en plus petites fonctions rend votre code bien plus lisible (et m\xeame si cette nouvelle fonction interm\xe9diaire n'est utilis\xe9 qu'\xe0 un seul endroit !)."}),"\n",(0,s.jsx)(n.admonition,{title:"Astuce",type:"tip",children:(0,s.jsx)(n.p,{children:"Si vous pensez avoir assez d\xe9coup\xe9 votre code, s\xe9parez-le encore."})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(6540);const o={},t=s.createContext(o);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);